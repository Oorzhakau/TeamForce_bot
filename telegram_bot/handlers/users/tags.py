import logging
import re

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import Message, ReplyKeyboardRemove

from keyboards.default.cancel_menu import cancel_menu
from loader import dp
from utils.db_api import db_commands as commands
from states.state_tag import TagState


@dp.message_handler(Text(startswith="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å"), state="*")
async def cancel_application(message: Message, state: FSMContext):
    """–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã."""
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.answer(
        "–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message_handler(Text(equals="–°–ø–∏—Å–æ–∫ —Ç–µ–º üìÅ"))
async def show_tags(message: Message):
    """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Ç–µ–º."""
    tags = await commands.get_all_tags()
    if tags:
        for tag in tags:
            await message.answer(text=str(tag))
        return
    await message.answer(text="–°–ø–∏—Å–æ–∫ —Ç–µ–º –ø—É—Å—Ç!")
    logging.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —Ç–µ–º!")


@dp.message_handler(Text(equals="–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º—É üìÅ"))
async def add_tags(message: Message):
    """–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º—É."""
    tags = await commands.add_tag()
    await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã:")
    await TagState.email.set()


# @dp.message_handler(state=TagState.tag)
# async def get_email(message: Message, state: FSMContext):
#     """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –¥–ª—è –∑–∞—è–≤–∫–∏."""
#     tag_title = message.text
#     pattern = re.compile(
#         "[A-Za-z0-9]+"
#     )
#     if not re.fullmatch(pattern, tag_title):
#         await message.answer(
#             "–í–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É "
#             + "–∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É.",
#             reply_markup=cancel_menu,
#         )
#         return
#     await state.finish()
#     tag = 
#     await message.answer(
#         "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è",
#         reply_markup=cancel_menu,
#     )
#     await RequestState.next()